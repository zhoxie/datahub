# TODO: Complete comments to all of these types.

extend type Query {
    """
    Deprecated, use appConfig Query instead
    Whether the analytics feature is enabled in the UI
    """
    isAnalyticsEnabled: Boolean! @deprecated

    """
    Retrieves a set of server driven Analytics Charts to render in the UI
    """
    getAnalyticsCharts: [AnalyticsChartGroup!]!

    """
    Retrieves a set of server driven Analytics Highlight Cards to render in the UI
    """
    getHighlights: [Highlight!]!
}

"""
For consumption by UI only
"""
union AnalyticsChart = TimeSeriesChart | BarChart | TableChart | PieChart

"""
For consumption by UI only
"""
type AnalyticsChartGroup {
    title: String!
    charts: [AnalyticsChart!]!
}

"""
For consumption by UI only
"""
enum DateInterval {
    SECOND
    MINUTE
    HOUR
    DAY
    WEEK
    MONTH
    YEAR
}

"""
For consumption by UI only
"""
type DateRange {
    start: String!
    end: String!
}

"""
For consumption by UI only
"""
type NumericDataPoint {
    x: String!
    y: Int!
}

"""
For consumption by UI only
"""
type NamedLine {
    name: String!
    data: [NumericDataPoint!]!
}

"""
For consumption by UI only
"""
type TimeSeriesChart {
    title: String!
    lines: [NamedLine!]!
    dateRange: DateRange!
    interval: DateInterval!
}

"""
For consumption by UI only
"""
type BarSegment {
    label: String!
    value: Int!
}

"""
For consumption by UI only
"""
type NamedBar {
    name: String!
    segments: [BarSegment!]!
}

"""
For consumption by UI only
"""
type BarChart {
    title: String!
    bars: [NamedBar!]!
}

"""
For consumption by UI only
"""
type Row {
    # All values are expected to be strings.
    values: [String!]!
}

"""
For consumption by UI only
"""
type TableChart {
    title: String!
    columns: [String!]!
    rows: [Row!]!
}

"""
For consumption by UI only
"""
type Highlight {
    value: Int!
    title: String!
    body: String!
}

"""
For consumption by UI only
"""
type PieSegment {
    label: String!
    value: Int!
}

"""
For consumption by UI only
"""
type NamedPie {
    name: String!
    segment: PieSegment!
}

"""
For consumption by UI only
"""
type PieChart {
    title: String!
    pies: [NamedPie!]!
}

